// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ticketingBurgett.Models;

namespace ticketingBurgett.Migrations
{
    [DbContext(typeof(TicketScheduleContext))]
    [Migration("20210411022011_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ticketingBurgett.Models.Day", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("DayId");

                    b.ToTable("Days");

                    b.HasData(
                        new
                        {
                            DayId = 1,
                            Name = "Monday"
                        },
                        new
                        {
                            DayId = 2,
                            Name = "Tuesday"
                        },
                        new
                        {
                            DayId = 3,
                            Name = "Wednesday"
                        },
                        new
                        {
                            DayId = 4,
                            Name = "Thursday"
                        },
                        new
                        {
                            DayId = 5,
                            Name = "Friday"
                        },
                        new
                        {
                            DayId = 6,
                            Name = "Saturday"
                        },
                        new
                        {
                            DayId = 7,
                            Name = "Sunday"
                        });
                });

            modelBuilder.Entity("ticketingBurgett.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Name = "to do"
                        },
                        new
                        {
                            StatusId = 2,
                            Name = "in progress"
                        },
                        new
                        {
                            StatusId = 3,
                            Name = "quality assurance"
                        },
                        new
                        {
                            StatusId = 4,
                            Name = "done"
                        });
                });

            modelBuilder.Entity("ticketingBurgett.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MilitaryTime")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("pointValue")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("sprint")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("DayId");

                    b.HasIndex("StatusId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            DayId = 1,
                            Description = "Convert feet to inches",
                            MilitaryTime = "1500",
                            Name = "feetToInches",
                            StatusId = 1,
                            pointValue = 5,
                            sprint = 2
                        },
                        new
                        {
                            TicketId = 2,
                            DayId = 1,
                            Description = "Convert inches to feet",
                            MilitaryTime = "1500",
                            Name = "inchesToFeet",
                            StatusId = 1,
                            pointValue = 15,
                            sprint = 6
                        },
                        new
                        {
                            TicketId = 3,
                            DayId = 1,
                            Description = "Convert inches to meters",
                            MilitaryTime = "1500",
                            Name = "inchesToMeters",
                            StatusId = 1,
                            pointValue = 10,
                            sprint = 4
                        });
                });

            modelBuilder.Entity("ticketingBurgett.Models.Ticket", b =>
                {
                    b.HasOne("ticketingBurgett.Models.Day", "Day")
                        .WithMany("Tickets")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ticketingBurgett.Models.Status", "Status")
                        .WithMany("Tickets")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Day");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ticketingBurgett.Models.Day", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("ticketingBurgett.Models.Status", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
